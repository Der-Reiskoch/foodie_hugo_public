const CACHE_VERSION=1.1,BASE_CACHE_FILES=['/index.html','/index.json','/manifest.json','/favicon.ico','/img/avatar.jpg','/img/logo.svg','/img/lazy-loading.png','/img/header-background.jpg','/fonts/open-sans-v26-latin-700.woff2','/fonts/open-sans-v26-latin-regular.woff2','/fonts/open-sans-v26-latin-italic.woff2','/svg/sprites/meta-sprite.svg','/svg/search-icon.svg','/svg/search-icon-bold.svg','/suchen/index.html','/css/styles_v2_1.css'],OFFLINE_CACHE_FILES=['/nicht-verbunden/index.html','/img/offline.jpg','/css/styles_v2_1.css'],NOT_FOUND_CACHE_FILES=['/nicht-gefunden/index.html','/img/teller_leer.jpg','/css/styles_v2_1.css'],OFFLINE_PAGE='/nicht-verbunden/index.html',NOT_FOUND_PAGE='/nicht-gefunden/index.html',CACHE_VERSIONS={assets:'assets-v'+CACHE_VERSION,content:'content-v'+CACHE_VERSION,offline:'offline-v'+CACHE_VERSION,notFound:'404-v'+CACHE_VERSION},MAX_TTL={'/':1800,html:1800,json:86400,js:86400,css:86400},CACHE_BLACKLIST=[a=>a.indexOf('localhost')!==-1,a=>a.indexOf('kommentiere-den.reisko.ch')!==-1],SUPPORTED_METHODS=['GET'];function isBlacklisted(a){return CACHE_BLACKLIST.length>0&&!CACHE_BLACKLIST.filter(b=>typeof b=='function'&&!b(a)).length}function getFileExtension(b){let a=b.split('.').reverse()[0].split('?')[0];return a.endsWith('/')?'/':a}function getTTL(a){if(typeof a=='string'){let b=getFileExtension(a);return typeof MAX_TTL[b]=='number'?MAX_TTL[b]:null}else return null}function installServiceWorker(){try{return Promise.all([caches.open(CACHE_VERSIONS.assets).then(a=>a.addAll(BASE_CACHE_FILES)),caches.open(CACHE_VERSIONS.offline).then(a=>a.addAll(OFFLINE_CACHE_FILES)),caches.open(CACHE_VERSIONS.notFound).then(a=>a.addAll(NOT_FOUND_CACHE_FILES))]).then(()=>self.skipWaiting())}catch(a){console.error(a)}}function cleanupLegacyCache(){let a=Object.keys(CACHE_VERSIONS).map(a=>CACHE_VERSIONS[a]);return new Promise((b,c)=>{caches.keys().then(b=>legacyKeys=b.filter(b=>!~a.indexOf(b))).then(a=>{a.length?Promise.all(a.map(a=>caches.delete(a))).then(()=>{b()}).catch(a=>{c(a)}):b()}).catch(()=>{c()})})}function precacheUrl(a){isBlacklisted(a)||caches.open(CACHE_VERSIONS.content).then(b=>{b.match(a).then(b=>b?null:fetch(a)).then(c=>c?b.put(a,c.clone()):null)})}self.addEventListener('install',a=>{a.waitUntil(Promise.all([installServiceWorker(),self.skipWaiting()]))}),self.addEventListener('activate',a=>{a.waitUntil(Promise.all([cleanupLegacyCache(),self.clients.claim(),self.skipWaiting()]).catch(b=>{a.skipWaiting()}))}),self.addEventListener('fetch',a=>{a.respondWith(caches.open(CACHE_VERSIONS.content).then(b=>b.match(a.request).then(c=>{if(c){let e=c.headers.entries(),d=null;for(let a of e)a[0]==='date'&&(d=new Date(a[1]));if(d){let f=parseInt(((new Date).getTime()-d.getTime())/1e3),e=getTTL(a.request.url);return e&&f>e?new Promise(d=>fetch(a.request.clone()).then(e=>{e?(b.put(a.request,e.clone()),d(e)):d(c)}).catch(()=>{d(c)})).catch(a=>c):c}else return c}else return null}).then(c=>c||fetch(a.request.clone()).then(c=>c.status<400?(~SUPPORTED_METHODS.indexOf(a.request.method)&&!isBlacklisted(a.request.url)&&b.put(a.request,c.clone()),c):caches.open(CACHE_VERSIONS.notFound).then(a=>a.match(NOT_FOUND_PAGE))).then(a=>{if(a)return a}).catch(()=>caches.open(CACHE_VERSIONS.offline).then(a=>a.match(OFFLINE_PAGE)))).catch(a=>{throw console.error('Error in fetch handler:',a),a})))}),self.addEventListener('message',a=>{if(typeof a.data=='object'&&typeof a.data.action=='string')switch(a.data.action){case'cache':precacheUrl(a.data.url);break;default:console.log('Unknown action: '+a.data.action);break}})