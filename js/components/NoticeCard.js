import{c as _,S as p,i as d,f,s as g,o as h,p as y,k as u,l as m,q as k,A as b,B as C,C as N,D as w,E as D,t as q,g as E,n as F}from"./index.js";import{C as S,c as z}from"./Card.js";import"./Icon.js";const A="info";function B(i){let t;return{c(){t=q("Notice Card is a specialized semantic card with a reduced set of fillings and icons")},m(s,n){E(s,t,n)},d(s){s&&F(t)}}}function M(i){let t;const s=i[4].default,n=C(s,i,i[5],null),a=n||B();return{c(){a&&a.c()},m(e,o){a&&a.m(e,o),t=!0},p(e,o){n&&n.p&&(!t||o&32)&&N(n,s,e,e[5],t?D(s,e[5],o,null):w(e[5]),null)},i(e){t||(u(a,e),t=!0)},o(e){m(a,e),t=!1},d(e){a&&a.d(e)}}}function T(i){let t,s;return t=new S({props:{filling:i[1],title:i[0],iconName:i[2],type:"elevated",$$slots:{default:[M]},$$scope:{ctx:i}}}),{c(){h(t.$$.fragment)},m(n,a){y(t,n,a),s=!0},p(n,[a]){const e={};a&2&&(e.filling=n[1]),a&1&&(e.title=n[0]),a&4&&(e.iconName=n[2]),a&32&&(e.$$scope={dirty:a,ctx:n}),t.$set(e)},i(n){s||(u(t.$$.fragment,n),s=!0)},o(n){m(t.$$.fragment,n),s=!1},d(n){k(t,n)}}}function $(i,t,s){let{$$slots:n={},$$scope:a}=t,e="primary",o="info";b(()=>{switch(r){case"info":{s(1,e="primary"),s(2,o="info");break}case"neutral":{s(1,e=z),s(2,o="info");break}case"warning":{s(1,e="tertiary"),s(2,o="notification");break}}});let{type:r=A}=t,{title:c=""}=t;return i.$$set=l=>{"type"in l&&s(3,r=l.type),"title"in l&&s(0,c=l.title),"$$scope"in l&&s(5,a=l.$$scope)},[c,e,o,r,n,a]}class j extends p{constructor(t){super(),d(this,t,$,T,g,{type:3,title:0})}get type(){return this.$$.ctx[3]}set type(t){this.$$set({type:t}),f()}get title(){return this.$$.ctx[0]}set title(t){this.$$set({title:t}),f()}}customElements.define("khao-card-notice",_(j,{type:{},title:{}},["default"],[],!0));
